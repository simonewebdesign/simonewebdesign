<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Articles about PHP | Simone Web Design]]></title>
  <link href="https://www.simonewebdesign.it/categories/php/atom.xml" rel="self"/>
  <link href="https://www.simonewebdesign.it/"/>
  <updated>2021-06-11T20:24:10+01:00</updated>
  <id>https://www.simonewebdesign.it/</id>
  <author>
    <name><![CDATA[Simone Vittori]]></name>
    
  </author>

  
  <entry>
    <title type="html"><![CDATA[How to put online your WampServer]]></title>
    <link href="https://www.simonewebdesign.it/how-to-put-online-your-wampserver/"/>
    <updated>2013-07-20T00:00:00+01:00</updated>
    <id>https://www.simonewebdesign.it/how-to-put-online-your-wampserver</id>
    <content type="html"><![CDATA[<p>
  <img src="/images/wampserver-logo.png" alt="WampServer Logo" width="200" height="200" class="basic-alignment left" />On your Windows machine you run an <strong>Apache web server</strong> with some <abbr title="PHP: Hypertext Preprocessor (recursive acronym)">PHP</abbr> websites in there. What if you want to show all of them to your friends, or want to be <strong>reachable by the whole Internet</strong>? This may sound quite difficult to achieve, but actually it&#8217;s fairly straightforward to <strong>put online a web server</strong>: let&#8217;s see how.
</p>

<h3>
  Publishing your Website on the Internet
</h3>

<p>
  First of all, you need to get your WAMP stack up and running on your local host. I&#8217;ll assume you already have a web application hosted on your own PC, and that is reachable by just typing this <abbr title="Uniform Resource Locator">URL</abbr> in the address bar:
</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://localhost/    # or http://127.0.0.1
</code></pre></div></div>

<p>
  Now you should access to your router web interface. Usually it is reachable by navigating to:
</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://192.168.1.1
</code></pre></div></div>

<p>
  However this may vary, depending on your router model. When in doubt, open the command prompt (<code>cmd</code>), type <code>ipconfig</code> and press enter. You should see something like this:
</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>C:\&gt;ipconfig

Ethernet adapter Local Area Connection:

  Connection-specific DNS Suffix  . :
  IP Address. . . . . . . . . . . . : 192.168.1.27
  Subnet Mask . . . . . . . . . . . : 255.255.255.0
  Default Gateway . . . . . . . . . : 192.168.1.1
</code></pre></div></div>

<p>
  Please take note of the <abbr title="Internet Protocol">IP</abbr> address: that&#8217;s your private address, which uniquely identifies you in your local network. If you try it in your browser, you should be able to see the public contents of your server.
</p>

<h3>
  Port Forwarding
</h3>

<p>
  In order to be reached by the world, you should tell your gateway where is your web server. All incoming request on port <code>80</code> should be redirected to your own private <abbr title="Internet Protocol">IP</abbr> address. Even this process may vary; it really depends on your router. By the way, this is what you basically want to do: <strong>forward every request</strong> on port <code>80</code> to <code>192.168.1.27</code> (of course you must use your own <abbr title="Internet Protocol">IP</abbr> address). But since the router&#8217;s web server already keeps the port <code>80</code> busy, here&#8217;s what you can do:
</p>

<ul>
  <li>
    Move the gateway&#8217;s web interface to another port;
  </li>
  <li>
    Move your web server to another port.
  </li>
</ul>

<p>
  I&#8217;ll pick the last one, since it&#8217;s usually easier to do, and the first option is not always possible. So, let&#8217;s <strong>change the port</strong>: open the <code>httpd.conf</code> and find this row:
</p>

<div class="language-apache highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Listen</span> 80
</code></pre></div></div>

<p>
  replace it with:
</p>

<div class="language-apache highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Listen</span> &lt;port number&gt;
</code></pre></div></div>

<p>
  for example:
</p>

<div class="language-apache highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Listen</span> 8080
</code></pre></div></div>

<p>
  And <strong>restart the server</strong>. Now go to <code>http://localhost:8080</code> and check that everything went as expected.
</p>

<h3>
  Routing the outside web traffic to your own web server
</h3>

<p>
  All respectable routers have an advanced section called <strong><abbr title="Internet Protocol">IP</abbr>/Port Forwarding</strong>: find yours. If you don&#8217;t have this, I&#8217;m afraid you cannot be reachable by the outside.
</p>

<p>
  Usually you need to add two separate entries: one for TCP and one for UDP packets. Something like this will do the work:
</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Private IP     Private Port   Type   Public IP/mask   Public Port
192.168.1.27   8080 	      TCP    0.0.0.0/0        8080
192.168.1.27   8080 	      UDP    0.0.0.0/0        8080
</code></pre></div></div>

<p>
  Apply the changes and restart your router.
</p>

<h3>
  Configuring the server to be reachable by everyone
</h3>

<p>
  The last step! Open your <code>httpd.conf</code> and find this line:
</p>

<div class="language-apache highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">ServerName</span> localhost:80
</code></pre></div></div>

<p>
  Change it to:
</p>

<div class="language-apache highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">ServerName</span> &lt;your private IP&gt;:80
</code></pre></div></div>

<p>
  Example:
</p>

<div class="language-apache highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">ServerName</span> 192.168.1.27:80
</code></pre></div></div>

<p>
  <small>Just a quick note: you can jump over the step below. It can be done in an easier way by just clicking on the green <strong>WampServer tray icon</strong> and choosing &#8220;Put Online&#8221;.</small>
</p>

<p>
  Also find this line:
</p>

<div class="language-apache highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#   onlineoffline tag - don't remove</span>
    <span class="nc">Require</span> local
</code></pre></div></div>

<p>
  Change it to:
</p>

<div class="language-apache highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#   onlineoffline tag - don't remove</span>
    <span class="nc">Require</span> <span class="ss">all</span> granted
</code></pre></div></div>

<p>
  In older versions of Apache, the line would look like:
</p>

<div class="language-apache highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Order</span> Deny,Allow
<span class="nc">Deny</span> <span class="ss">from</span> <span class="ss">all</span>
<span class="nc">Allow</span> <span class="ss">from</span> 127.0.0.1
</code></pre></div></div>

<p>
  And you need to change it to:
</p>

<div class="language-apache highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Order</span> Allow,Deny
<span class="nc">Allow</span> <span class="ss">from</span> <span class="ss">all</span>
</code></pre></div></div>

<p>
  Restart your web server. Now just find out what&#8217;s your current public <abbr title="Internet Protocol">IP</abbr> address and try to go to:
</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://&lt;public IP address&gt;:&lt;port&gt;/
</code></pre></div></div>

<p>
  i.e.:
</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://13.37.223.21:8080/
</code></pre></div></div>

<p>
  It should work now! &#8230; Or, at least, it worked for me.
</p>

<p>
  Problems? Thoughts? As always, feel free to leave a comment.
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Laravel 4 is out!]]></title>
    <link href="https://www.simonewebdesign.it/laravel-4-is-out/"/>
    <updated>2013-05-29T00:00:00+01:00</updated>
    <id>https://www.simonewebdesign.it/laravel-4-is-out</id>
    <content type="html"><![CDATA[<p>
  <img src="/images/laravel4.png" class="basic-alignment left" /> <em><strong>Laaadies and gentlemen!</strong></em> I&#8217;m proud to announce that <a href="https://laravel.com" title="Laravel official website" rel="external">Laravel 4</a> has been released today!
</p>

<p>
  I&#8217;m really excited about this release because it&#8217;s the result of an intensive year of hard work. I truly believe it is <strong>the best <abbr title="PHP: Hypertext Preprocessor (recursive acronym)">PHP</abbr> framework</strong> out there. The Laravel Team worked hard to bring out the new Laravel4&#8242;s cool features, and I&#8217;m sure it will prove to be worth of work!
</p>

<p>
  If you haven&#8217;t checked out Laravel yet, please please <strong>please do it now</strong>! It&#8217;s just an incredible framework. I love it because it&#8217;s so simple, intuitive, and beautiful I can&#8217;t even believe it is developed in <abbr title="PHP: Hypertext Preprocessor (recursive acronym)">PHP</abbr>. If you are a professional <abbr title="PHP: Hypertext Preprocessor (recursive acronym)">PHP</abbr> developer, you just can&#8217;t know Laravel. Give it a try: you&#8217;ll never go back. Guaranteed.
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fushi PHP Boilerplate Released!]]></title>
    <link href="https://www.simonewebdesign.it/fushi-php-boilerplate-released/"/>
    <updated>2012-10-07T19:23:26+01:00</updated>
    <id>https://www.simonewebdesign.it/fushi-php-boilerplate-released</id>
    <content type="html"><![CDATA[<p>
  <img src="https://raw.github.com/simonewebdesign/Fushi/master/public/img/fushi-logo-t2.png" alt="Fushi PHP Boilerplate logo" width="295" height="138" class="basic-alignment left" /><em>Hooray!</em> I just released the version 0.8 of my very own <abbr title="PHP: Hypertext Preprocessor (recursive acronym)">PHP</abbr> framework / boilerplate.
</p>

<p>
  It has a lot of interesting <a href="https://github.com/simonewebdesign/Fushi#features" title="Features of Fushi PHP boilerplate">features</a>: it comes with a simple but powerful <a href="http://en.wikipedia.org/wiki/Template_system" title="Template System on Wikipedia" rel="external">template system</a>, as well as a secure and <a href="http://en.wikipedia.org/wiki/Object-oriented_programming" title="Object Oriented Programming on Wikipedia" rel="external">object-oriented</a> backend engine. It&#8217;s also studied to be user friendly and <abbr title="Search Engine Optimization">SEO</abbr> friendly. It&#8217;s based on the popular <a href="http://html5boilerplate.com/" title="HTML5 Boilerplate">HTML5 Boilerplate</a>.
</p>

<p>
  I&#8217;ve been using it for some of my projects since march 2012. I surely can&#8217;t say <a href="https://github.com/simonewebdesign/Fushi" title="Fushi PHP boilerplate on GitHub">Fushi</a> is versatile like <a href="http://www.smarty.net/" title="Smarty Template Engine" rel="external">Smarty</a> or mature like <a href="http://codeigniter.com/" title="CodeIgniter - Open source PHP web application framework" rel="external">CodeIgniter</a>; I&#8217;m not even sure on what <a href="https://en.wikipedia.org/wiki/Software_design_pattern" title="Software design pattern on Wikipedia" rel="external">design pattern</a> it actually implements (<i>update:</i> found it: <a href="https://en.wikipedia.org/wiki/Front_Controller_pattern">Front Controller Pattern</a>). But I can say I successfully deployed some nice web applications based on <a href="https://github.com/simonewebdesign/Fushi" title="Fushi PHP boilerplate on GitHub">Fushi</a>, from the <a href="https://github.com/simonewebdesign/bluimmobiliareperugia.it" title="Blu Immobiliare Perugia on GitHub">real estate agency</a> to the <a rel="external" href="https://github.com/simonewebdesign/antoniorossicomposer.com" title="Antonio Rossi Composer on GitHub">musician</a>&#8217;s website. This demonstrates that Fushi can be used in a large variety of projects, small and big.
</p>

<p>
  <a href="https://github.com/simonewebdesign/Fushi" title="Fushi PHP boilerplate on GitHub">Fushi</a> is <a href="https://en.wikipedia.org/wiki/Open_source" title="Open Source">open source</a> software released under the <abbr title="Massachusetts Institute of Technology">MIT</abbr> license, so feel free to use, copy, modify, merge, publish, distribute and contribute to this project. Fushi was initially born on december 14, 2011, with the sole purpose of learning new programming techniques; but now, months of hard work are at your disposal. <a href="https://github.com/simonewebdesign/Fushi#readme" title="Fushi PHP boilerplate on GitHub">Try it</a>, and you won&#8217;t regret.
</p>

<ul>
  <li>
    <a href="https://github.com/simonewebdesign/Fushi/zipball/master" title="Download Fushi from GitHub" rel="external">Direct Download</a> (latest stable version: v0.9.5, ~140 <abbr title="Kilobyte">KB</abbr>)
  </li>
  <li>
    <a href="https://github.com/simonewebdesign/Fushi#features" title="Features of Fushi PHP boilerplate">Features</a>
  </li>
  <li>
    <a href="https://github.com/simonewebdesign/Fushi#requirements" title="Requirements of Fushi PHP boilerplate">System requirements</a>
  </li>
  <li>
    <a href="https://github.com/simonewebdesign/Fushi#getting-started" title="Getting started Fushi PHP boilerplate">Getting started</a>
  </li>
  <li>
    <a href="https://github.com/simonewebdesign/Fushi#documentation" title="Documentation of Fushi PHP boilerplate">Documentation</a>
  </li>
  <li>
    <a href="https://github.com/simonewebdesign/Fushi/commits/master/" title="Fushi Commits on GitHub" rel="external">Changelog</a>
  </li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to create a web bug (aka beacon image)]]></title>
    <link href="https://www.simonewebdesign.it/how-to-create-web-bug-aka-beacon-image/"/>
    <updated>2012-09-23T16:22:30+01:00</updated>
    <id>https://www.simonewebdesign.it/how-to-create-web-bug-aka-beacon-image</id>
    <content type="html"><![CDATA[<p>
  Have you ever wondered why some web pages include a 1&#215;1 <abbr title="Graphics Interchange Format">GIF</abbr> image? Well, they&#8217;re called <strong>web bugs</strong>, and they <strong>track you</strong>.
</p>

<p>
  The beacon images (better known as <a href="https://en.wikipedia.org/wiki/Web_bug" title="Web bug on Wikipedia">web bugs</a>) are basically just hidden scripts behind images. They can easily be spotted because they usually don&#8217;t end with a common image format, like <abbr title="Graphics Interchange Format">gif</abbr>, <abbr title="Joint Photographic Experts Group">jpeg</abbr> or <abbr title="Portable Network Graphics">png</abbr>.<br />An example of web beacon could be this:
</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">"beacon.php"</span> <span class="na">width=</span><span class="s">"1"</span> <span class="na">height=</span><span class="s">"1"</span> <span class="na">alt=</span><span class="s">""</span><span class="nt">&gt;</span>
</code></pre></div></div>

<p>
  As you can see, the <code>src</code> attribute contains a <abbr title="PHP: Hypertext Preprocessor (recursive acronym)">PHP</abbr> script. It&#8217;s easy to find (and <a href="http://www.ghostery.com/" title="Ghostery" rel="external">block</a>) web bugs when you see that an image is served as <abbr title="PHP: Hypertext Preprocessor (recursive acronym)">PHP</abbr>.
</p>

<p>
  By the way, more generally speaking, if you see that a file ends with <em>.jpg</em> (it&#8217;s an image, you think) or just doesn&#8217;t have an extension (I&#8217;m inside a folder, you think)&#8230; well, <strong>you could be wrong</strong>. I can easily execute a script when an user requests a simple image ending with <em>.jpg</em>, and I&#8217;ll explain you how.
</p>

<p>
  In order to create a <strong>hidden web bug</strong>, you need to enable the Apache&#8217;s <abbr title="Uniform Resource Locator">URL</abbr> rewriting module (mod_rewrite). Create a new <code>.htaccess</code> file and put the following code in it:
</p>

<div class="language-apache highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">RewriteEngine</span> <span class="ss">On</span>
<span class="nc">RewriteRule</span> ^(.*).(png|jpg|gif)$ script.php
</code></pre></div></div>

<p>
  Now create the <code>script.php</code> file and write some random code:
</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>
<span class="nv">$fullpath</span>  <span class="o">=</span> <span class="nv">$_SERVER</span><span class="p">[</span><span class="s1">'REQUEST_URI'</span><span class="p">];</span>
<span class="nv">$filename</span>  <span class="o">=</span> <span class="nb">basename</span><span class="p">(</span><span class="nv">$fullpath</span><span class="p">);</span>
<span class="nv">$ip</span>        <span class="o">=</span> <span class="nv">$_SERVER</span><span class="p">[</span><span class="s1">'REMOTE_ADDR'</span><span class="p">];</span>
<span class="nv">$useragent</span> <span class="o">=</span> <span class="nv">$_SERVER</span><span class="p">[</span><span class="s1">'HTTP_USER_AGENT'</span><span class="p">];</span>

<span class="k">echo</span> <span class="s2">"Path: </span><span class="nv">$fullpath</span><span class="s2">;&lt;br&gt;
File: </span><span class="nv">$filename</span><span class="s2">;&lt;br&gt;
IP address: </span><span class="nv">$ip</span><span class="s2">;&lt;br&gt;
User agent: </span><span class="nv">$useragent</span><span class="s2">"</span><span class="p">;</span>
</code></pre></div></div>

<p>
  <video width="300" height="208" autoplay="" loop="" muted="muted" poster="/images/omg-cat.jpg" class="basic-alignment left">
    <source type="video/mp4" src="/videos/omg-cat.mp4" />
  </video>
  And now try to navigate through an image, let&#8217;s say <code>cat.gif</code>. You&#8217;ll go to <em>http://yoursite.com/path/to/cat.gif</em> and you&#8217;ll expect to see a cat. Instead, you&#8217;ll see something like this:
</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">Path</span><span class="pi">:</span> <span class="s">/path/to/cat.gif;</span>
<span class="na">File</span><span class="pi">:</span> <span class="s">cat.gif;</span>
<span class="na">IP address</span><span class="pi">:</span> <span class="s">127.0.0.1;</span>
<span class="na">User agent</span><span class="pi">:</span> <span class="s">Mozilla/5.0 [...];</span>
</code></pre></div></div>

<p>
  Take a quick look at the <abbr title="Uniform Resource Locator">URL</abbr> in your browser&#8217;s address bar. You requested a <code>cat.gif</code>, but <code>script.php</code> has been executed instead. <strong>Kind of creepy, isn&#8217;t it?</strong> Imagine what else you could do. <strong>You can execute code. Possibilities are infinite.</strong>
</p>
]]></content>
  </entry>
  
</feed>
