<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Articles about Bash | Simone Web Design]]></title>
  <link href="https://www.simonewebdesign.it/categories/bash/atom.xml" rel="self"/>
  <link href="https://www.simonewebdesign.it/"/>
  <updated>2021-06-11T20:24:10+01:00</updated>
  <id>https://www.simonewebdesign.it/</id>
  <author>
    <name><![CDATA[Simone Vittori]]></name>
    
  </author>

  
  <entry>
    <title type="html"><![CDATA[How to enable Dark Mode on macOS with the command line]]></title>
    <link href="https://www.simonewebdesign.it/how-to-enable-dark-mode-macos-command-line/"/>
    <updated>2020-04-28T00:00:00+01:00</updated>
    <id>https://www.simonewebdesign.it/how-to-enable-dark-mode-macos-command-line</id>
    <content type="html"><![CDATA[<p>If you want to toggle between light and dark mode, it can be done with a single shell command:</p>

<div class="language-applescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">osascript</span><span class="w"> </span><span class="o">-</span><span class="nv">e</span><span class="w"> </span><span class="err">'</span><span class="k">tell</span><span class="w"> </span><span class="nv">app</span><span class="w"> </span><span class="s2">"System Events"</span><span class="w"> </span><span class="k">to</span><span class="w"> </span><span class="k">tell</span><span class="w"> </span><span class="nv">appearance</span><span class="w"> </span><span class="nv">preferences</span><span class="w"> </span><span class="k">to</span><span class="w"> </span><span class="k">set</span><span class="w"> </span><span class="nv">dark</span><span class="w"> </span><span class="nv">mode</span><span class="w"> </span><span class="k">to</span><span class="w"> </span><span class="ow">not</span><span class="w"> </span><span class="nv">dark</span><span class="w"> </span><span class="nv">mode</span><span class="err">'</span><span class="w">
</span></code></pre></div></div>

<p>Try it and it will switch the mode immediately. No need to restart or install anything.</p>

<!--more-->

<h2 id="how-does-it-work">How does it work?</h2>

<p>It’s <a href="https://en.wikipedia.org/wiki/AppleScript" rel="external">AppleScript</a>. <code class="language-plaintext highlighter-rouge">dark mode</code> is a boolean value in the user defaults system. <code class="language-plaintext highlighter-rouge">not dark mode</code> is the opposite of that value. So, for example, if the value is <code class="language-plaintext highlighter-rouge">true</code>, it’s like saying <code class="language-plaintext highlighter-rouge">not true</code> (i.e. <code class="language-plaintext highlighter-rouge">false</code>), effectively acting like a light switch.</p>

<p>Enjoy the dark!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How To Get Environment Variables in the Browser]]></title>
    <link href="https://www.simonewebdesign.it/how-to-get-environment-variables-in-the-browser/"/>
    <updated>2015-08-03T12:00:00+01:00</updated>
    <id>https://www.simonewebdesign.it/how-to-get-environment-variables-in-the-browser</id>
    <content type="html"><![CDATA[<h2 id="preface-why">Preface: Why?</h2>

<p><strong>Environment variables</strong> are very useful for <strong>configuring your app</strong> depending on the environment, without having to hardcode any value in the source.</p>

<p>At my current company we are building a <strong>microservice infrastructure</strong>, where the <strong>frontend</strong> and the <strong>backend</strong> are completely decoupled applications. We also use <a href="https://docker.com/">Docker</a> to manage these microservices and link them together. Turns out that storing the configuration in the environment—as opposed to storing it in the database or in the code itself—is quite valuable, as described also in the <a href="http://12factor.net/config">twelve-factor</a> methodology.</p>

<h3 id="advantages">Advantages:</h3>

<ul>
  <li>Language and OS agnostic;</li>
  <li>Easy to change between deploys without changing any code;</li>
  <li>Impossible to accidentally check in source control.</li>
</ul>

<h2 id="how">How?</h2>

<p>A web page doesn’t have access to OS variables, so you can’t normally use them.</p>

<p>The solution is pretty simple: you just need to <strong>generate a file that contains them</strong>.</p>

<p>For such a trivial task you could be tempted to use your language of choice, e.g. in JavaScript (Node.js) you have access to <code class="language-plaintext highlighter-rouge">process.env.SOME_VAR</code>. In Python you would probably do <code class="language-plaintext highlighter-rouge">os.getenv('SOME_VAR')</code> and in Ruby you’d use <code class="language-plaintext highlighter-rouge">ENV['SOME_VAR']</code>—but what about some old-school shell scripting? The script could be as simple as:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># bin/env.sh</span>
<span class="nb">echo</span> <span class="s2">"env = {"</span>
<span class="nb">echo</span> <span class="s2">"  USER: '</span><span class="nv">$USER</span><span class="s2">',"</span>
<span class="nb">echo</span> <span class="s2">"  HOSTNAME: '</span><span class="nv">$HOSTNAME</span><span class="s2">'"</span>
<span class="nb">echo</span> <span class="s2">"}"</span>
</code></pre></div></div>

<p>That, when executed, will become:</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// env.js</span>
<span class="nx">env</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">USER</span><span class="p">:</span> <span class="dl">'</span><span class="s1">yourname</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">HOSTNAME</span><span class="p">:</span> <span class="dl">'</span><span class="s1">ubuntu</span><span class="dl">'</span>
<span class="p">}</span>
</code></pre></div></div>

<p>And the script to execute on the shell is:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./bin/env.sh <span class="o">&gt;</span> env.js
</code></pre></div></div>

<p>Pretty straightforward, isn’t it?</p>

<h3 id="test-it">Test it:</h3>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>
<span class="nt">&lt;head&gt;</span>
  ...
<span class="nt">&lt;/head&gt;</span>
<span class="nt">&lt;body&gt;</span>
  <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"env.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
  <span class="nt">&lt;script&gt;</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">env</span><span class="p">.</span><span class="nx">USER</span><span class="p">,</span> <span class="nx">env</span><span class="p">.</span><span class="nx">HOSTNAME</span><span class="p">);</span>
  <span class="nt">&lt;/script&gt;</span>
<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div>

<p>One downside to this approach is that you have to “make a build” every time you change the variables. If you know any workarounds or better solutions, please let me know!</p>

<h3 id="source-and-download">Source and download</h3>

<p>Find the source code on <a href="https://github.com/simonewebdesign/frontend-env-vars">GitHub</a>. Download the zip file <a href="https://github.com/simonewebdesign/frontend-env-vars/archive/master.zip">here</a>.</p>

<p>Have fun!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Sublime Text 3 on Linux]]></title>
    <link href="https://www.simonewebdesign.it/install-sublime-text-3-on-linux/"/>
    <updated>2014-09-01T13:35:34+01:00</updated>
    <id>https://www.simonewebdesign.it/install-sublime-text-3-on-linux</id>
    <content type="html"><![CDATA[<p>There are <a ref="external" href="http://sublime-text-unofficial-documentation.readthedocs.org/en/latest/getting_started/install.html#linux">many ways</a> of <strong>installing Sublime Text 3 on Linux</strong>, but if you’re looking for a fast, straightforward way, I believe you are in the right place.</p>

<p>This script will install <strong>the latest build of Sublime Text 3</strong>.</p>

<p>Open your terminal and run:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-L</span> git.io/sublimetext | sh
</code></pre></div></div>

<p>It will install the <a href="https://sublime.wbond.net/" rel="external">Package Control</a> as well, so you don’t have to do it yourself.</p>

<p>If you are interested to see the actual code behind, here we go:</p>

<p><a href="https://gist.github.com/simonewebdesign/8507139">https://gist.github.com/simonewebdesign/8507139</a></p>

<p>It should work on most Linux distros; if not, please let me know by leaving a comment below. I’m here to help.</p>

<p>Enjoy!</p>

<p><strong>Update</strong>: When I wrote this script, my motivation was that there was no easy way to install Sublime Text on Linux. However, nowadays there is an official repository providing builds for all the major Linux package managers: <a href="https://www.sublimetext.com/docs/3/linux_repositories.html" rel="external">see here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bash script for batch running OptiPNG]]></title>
    <link href="https://www.simonewebdesign.it/bash-script-for-batch-running-optipng/"/>
    <updated>2014-03-08T14:54:15+00:00</updated>
    <id>https://www.simonewebdesign.it/bash-script-for-batch-running-optipng</id>
    <content type="html"><![CDATA[<h3>Optimize all your images with a single command:</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find <span class="nb">.</span> <span class="nt">-name</span> <span class="s1">'*.png'</span> | xargs optipng <span class="nt">-nc</span> <span class="nt">-nb</span> <span class="nt">-o7</span> <span class="nt">-full</span>
</code></pre></div></div>

<hr />

<h2>What is OptiPNG?</h2>

<p><a href="http://optipng.sourceforge.net/" title="OptiPNG is a PNG optimizer that recompresses image files to a smaller size, without losing any information. This program also converts external formats (BMP, GIF, PNM and TIFF) to optimized PNG, and performs PNG integrity checks and corrections.">OptiPNG</a> is a PNG optimizer tool. If you want your website to be faster, you should consider optimizing images.</p>

<p>When I ran the <a href="http://developers.google.com/speed/pagespeed/insights/" title="PageSpeed Insights" rel="external">Google PageSpeed</a> tool towards my website, I got a score of 81/100 for Desktop, 61/100 for Mobile. Pretty low, I thought. So I decided to go through the "Consider Fixing" issues, and the first one was - guess what? - <strong>optimize images</strong>.</p>

<blockquote>Properly formatting and compressing images can save many bytes of data.</blockquote>

<p><img src="/images/optimize-all-the-images.png" alt="OPTIMIZE ALL THE IMAGES!" width="280" height="210" class="basic-alignment left" />The thing I did immediately next was reading the article that Google suggested: it's a nice reading on Google Developers about <a href="https://developers.google.com/speed/docs/insights/OptimizeImages" title="Optimizing images - Google Developers" rel="external">optimizing images</a>. The first recommendation is: <strong>Use an image compressor</strong>. OptiPNG is one of them.</p>

<p>On the OptiPNG site I realized it works only for one image at a time, so I had the need to write a script that runs the optimizer for all images at the same time.</p>

<p>Luckily enough, after a bit of search, I found a blog post titled <a href="http://www.justpowered.de/blog/shellbatch/optimize-all-png-images-recursively.html" title="Optimize all PNG images recursively">Optimize all PNG images recursively</a>, which finally solved my problem. All the credits belong to that blog.</p>

<p>After running the script I got a score of 86/100 for Desktop (before was 81), and 68/100 for Mobile (before was 61), <strong>all without loss of quality</strong>. Definitely worth a try!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How To Install Sublime Text 3 on Fedora]]></title>
    <link href="https://www.simonewebdesign.it/install-sublime-text-3-on-fedora-20/"/>
    <updated>2014-01-29T00:00:00+00:00</updated>
    <id>https://www.simonewebdesign.it/install-sublime-text-3-on-fedora-20</id>
    <content type="html"><![CDATA[<p><strong>The following script is obsolete. Find the latest Sublime Text builds for Linux <a href="https://www.sublimetext.com/docs/3/linux_repositories.html" rel="external">here</a>.</strong></p>

<hr />

<p>
  Here&#8217;s a simple script to install the latest stable build of <strong>Sublime Text 3</strong> in <strong>Fedora</strong>.<br /> Should work on other <strong>Linux</strong> distros too. See the <a href="https://gist.github.com/simonewebdesign/8507139" title="Install Sublime Text 3 on Fedora 20" rel="external">full gist on GitHub</a>.
</p>

<p>It will install the Package Control as well!</p>

<p>
  Just run this command:
</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-L</span> git.io/sublimetext | sh
</code></pre></div></div>

<ul>
  <li>Update (10 March 2014): I made some improvements to the script so I generated a new link.</li>
  <li>Update (16 March 2014): The script stopped working because GitHub is now doing a redirect to another domain (see <a href="https://developer.github.com/changes/2014-04-25-user-content-security/" rel="external">their post</a> if you’re interested). Added the <code class="language-plaintext highlighter-rouge">-L</code> flag to fix the issue.</li>
  <li>Update (1 September 2014): I’ve updated the script to install the latest build and made a new blog post, <a href="/install-sublime-text-3-on-linux/" rel="external">check it out</a>.</li>
  <li>Update (12 July 2015): Updated the script again to work with the latest version of Fedora.</li>
  <li>Final update (7 July 2020): I meant to update this ages ago, but Sublime Text now officially provides builds for all common Linux distros. Here’s the <a href="https://www.sublimetext.com/docs/3/linux_repositories.html#dnf" rel="external">dnf package</a> for Fedora.</li>
</ul>
]]></content>
  </entry>
  
</feed>
